name: Release and Deploy

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: read
  id-token: write # We need write access to the id-token so we can use workload identity federation

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Log build
        run: |
          echo "building..."

      - name: Log release published
        run: |
          echo "New release published: ${{ needs.release.outputs.new_release_published }}"



  deploy-latest:
    name: Deploy Latest
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log deploy latest
        run: |
          echo "Deploy to /latest"


  staging-test:
    name: Post Deploy Latest Playwright Tests
    needs: deploy-latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Succeed job
        run: exit 0

  release:
    name: Release
    needs: staging-test
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic-release.outputs.new_release_published }}
      new_version: ${{ steps.semantic-release.outputs.new_release_version }}
      new_release_major_version: ${{ steps.semantic-release.outputs.new_release_major_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic-release
        with:
          extra_plugins: |
            @semantic-release/changelog@^6.0.3
            @semantic-release/git@^10.0.1
            conventional-changelog-conventionalcommits@^9.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log release published
        run: |
          echo "New release published: ${{ steps.semantic-release.outputs.new_release_published }}"

      - name: Log release version
        run: |
          echo "New release version: ${{ steps.semantic-release.outputs.new_release_version }}"

  deploy:
    name: Deploy Version Aliases
    needs: release
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.new_release_published == 'true'}}
    steps:
      - name: Log release version
        run: |
          echo "New release version: ${{ needs.release.outputs.new_version }}"